/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import Controlador.Controlador;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Adán
 */
public class PantallaPrincipal extends javax.swing.JFrame {

    private Controlador con;
    private List<File> unidades;

    /**
     * Creates new form PantallaPrincipal
     */
    public PantallaPrincipal() {
        initComponents();
        this.setTitle("Limpieza de discos");
        con = new Controlador();
        try  {
            unidades = new ArrayList<>(Arrays.asList(con.listarUnidadesByMario()));
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "el SO no es completamente "
                    + "compatible, elije una carpeta para poder usar el progarama");
            JFileChooser jf = new JFileChooser();
            jf.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            int seleccion = jf.showOpenDialog(this);
            if(seleccion==JFileChooser.APPROVE_OPTION)
                unidades.add(jf.getSelectedFile());
            else
                dispose();
        }
        List<String> nombreUnidades = new ArrayList<>();
        unidades.forEach((file) -> nombreUnidades.add(File.separator+file.getName()));
        this.unidad.setModel(new DefaultComboBoxModel(nombreUnidades.toArray()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        unidad = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        botonEspacioLibre = new javax.swing.JButton();
        botonCarpetasVacias = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        botonGrandes = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        botonDuplicados = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Limpieza de disco");

        unidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setText("Unidad");

        botonEspacioLibre.setText("Espacio libre");
        botonEspacioLibre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEspacioLibreActionPerformed(evt);
            }
        });

        botonCarpetasVacias.setText("Borrar carpetas vacías");
        botonCarpetasVacias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCarpetasVaciasActionPerformed(evt);
            }
        });

        jButton1.setText("Borrar archivos por categoria");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        botonGrandes.setText("Borrar archivos de gran tamaño");
        botonGrandes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGrandesActionPerformed(evt);
            }
        });

        jButton3.setText("Borrar ficheros antiguos");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        botonDuplicados.setText("Borrar ficheros duplicados");
        botonDuplicados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonDuplicadosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(unidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74)
                        .addComponent(botonEspacioLibre, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE))
                    .addComponent(botonCarpetasVacias, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botonGrandes, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botonDuplicados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(unidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonEspacioLibre))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(botonGrandes)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addGap(18, 18, 18)
                .addComponent(botonDuplicados)
                .addGap(18, 18, 18)
                .addComponent(botonCarpetasVacias)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(143, 143, 143)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botonEspacioLibreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEspacioLibreActionPerformed
        // TODO add your handling code here:
        
        System.out.println(this.unidades.get(this.unidad.getSelectedIndex()).getFreeSpace());
        JOptionPane.showMessageDialog(this, " Hay un total de " 
                +con.espacioLibreFormateado(this.unidades.get(this.unidad.getSelectedIndex()))
                + " libres", "Espacio libre", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_botonEspacioLibreActionPerformed

    private void botonCarpetasVaciasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCarpetasVaciasActionPerformed
        // TODO add your handling code here:
        File index = this.unidades.get(this.unidad.getSelectedIndex());
        int opcionPanel = JOptionPane.showConfirmDialog(this,
                "¿quieres borrar carpetas vacias?", "Borrado de carpetas",
                JOptionPane.YES_NO_OPTION);
        if (opcionPanel == JOptionPane.YES_OPTION) {
            int contador = con.borrarDirectoriosVacios(index.getAbsolutePath());
            if (contador > 0) {
                JOptionPane.showMessageDialog(this, "se han eliminado " + contador
                        + " carpetas vacías", "Borrado de carpetas",
                        JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "No se ha encontrado ninguna"
                        + " carpeta vacía", "Borrado de carpetas",
                        JOptionPane.INFORMATION_MESSAGE);
            }
        } else if (opcionPanel == JOptionPane.NO_OPTION) {
            JOptionPane.showMessageDialog(this, "Pues ok");
        }
    }//GEN-LAST:event_botonCarpetasVaciasActionPerformed

    private void botonGrandesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGrandesActionPerformed
        // TODO add your handling code here:
        Integer[] lanzar = new Integer[] {1,2,5,10};
        int seleccion = JOptionPane.showOptionDialog(this, "¿De cuantos gigas?"
                , "borrado de archivos grandes", JOptionPane.YES_NO_OPTION ,
                JOptionPane.QUESTION_MESSAGE,null, lanzar, "1");
        
        if(seleccion!=-1){
            File archivo = this.unidades.get(this.unidad.getSelectedIndex());
            List<File> listarDirectoriosTamanio = con.listarDirectoriosTamanio(archivo,lanzar[seleccion]);
            new PantallaBorrado(this, true, con, listarDirectoriosTamanio).setVisible(true);
        }
        
        
    }//GEN-LAST:event_botonGrandesActionPerformed

    private void botonDuplicadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonDuplicadosActionPerformed
        // TODO add your handling code here:
        Map<File,File> duplicados = new HashMap<>();
        File ficheroBusqueda=null;
        JFileChooser jf = new JFileChooser(this.unidades.get(this.unidad.getSelectedIndex()));
        jf.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        //preguntar si quiere comprobar de carpetas en concreto.
        int seleccion = JOptionPane.showConfirmDialog(this, "¿Quiere comprobar solo de una carpeta especifica?,"
                + " sino este proceso podria tardar horas", "comprobar iguales"
                , JOptionPane.YES_NO_CANCEL_OPTION);
        if(seleccion==JOptionPane.YES_OPTION){
            int seleccionFile = jf.showOpenDialog(this);
            if (seleccionFile==JFileChooser.APPROVE_OPTION) 
                    ficheroBusqueda=jf.getSelectedFile();
        }else if (seleccion == JOptionPane.NO_OPTION)
            ficheroBusqueda= this.unidades.get(this.unidad.getSelectedIndex());
        
        if(ficheroBusqueda!=null){
            try {
                con.comprobarIgualesCarpeta(ficheroBusqueda,duplicados);
            } catch (IOException ex){}
            new PantallaDuplicados(this, true,duplicados,con).setVisible(true);
        }
    }//GEN-LAST:event_botonDuplicadosActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        JDialog dialo= new JDialog(this);
        dialo.add(this.botonCarpetasVacias);
        dialo.setSize(this.getSize());
        
        dialo.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PantallaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonCarpetasVacias;
    private javax.swing.JButton botonDuplicados;
    private javax.swing.JButton botonEspacioLibre;
    private javax.swing.JButton botonGrandes;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<String> unidad;
    // End of variables declaration//GEN-END:variables
}
